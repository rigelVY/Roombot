<launch>
  <arg name="model" default="$(find roombot_gazebo)/xacro/roomba_stl_body.xacro" />
  <arg name="joy" default="false" />
  <arg name="mode" default="sim" />
  <param name="robot_description" command="$(find xacro)/xacro $(arg model) --inorder"/>

  <group if="$(arg joy)">
    <node name="joy_node"   pkg="joy" type="joy_node" />
    <node name="roombot_joy_to_twist" pkg="roombot_driver" type="roombot_joy_to_twist" />
  </group>

  <group if="$(eval mode=='robot')">
    <node name="roombot_twist_to_tf" pkg="roombot_driver" type="roombot_twist_to_tf"/>
    <node name="twist_marker_visualizer" pkg="roombot_driver" type="twist_marker_visualizer"/>
  </group>

  <group if="$(eval mode=='sim')">
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
      <arg name="paused" value="false"/>
      <arg name="use_sim_time" value="true"/>
      <arg name="gui" value="true"/>
      <arg name="headless" value="false"/>
      <arg name="debug" value="false"/>
    </include>
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -model dtw_robot" />
    <rosparam command="load" file="$(find roombot_gazebo)/config/diff_drive_controller.yaml" ns="/dtw_robot" />
    <rosparam command="load" file="$(find roombot_gazebo)/config/joint_state_controller.yaml" ns="/dtw_robot"/>
    <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/dtw_robot" args="diff_drive_controller joint_state_controller" />
  </group>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen" ns="/dtw_robot"/>
  <node name="rviz" pkg="rviz" type="rviz" />
</launch>
